General:
    - Log Out mechanism
    - README
    - Add logger of actions
    - Users account - change password, verify account by email
    - Use domain events (for example to send verification emails)
    - Add some filtering for geographical criterias?
    - Implement image uploading

    - Where is difference between IIS and Kestrel and it's settings?
    - What about scopes during authorization? What is it actually?

Admin panel in UI:
    - CRUD users
    - Assigning roles to users
    - Displaying user's refresh tokens
    - Reseting passwords of users
    - CRUD countries entities
    - CRUD currencies
    - CRUD technology types

Docker:
    docker build -f JobJetRestApi.Web/Dockerfile -t jobjetrestapiimage .
    docker run -p 5002:5002 -p 5003:5003 wiktormuller/jobjet

Refresh tokens:
    - endpoint to get all of user's refresh tokens: users/1/refresh-tokens
    - endpoint to refresh token: users/refresh-token - you should receive a "200 OK" response with the user details including a JWT token in the response body and a refresh token in the response cookies.
    - to revoke a refresh token so it can no longer be used to generate JWT tokens - users/revoke-token - we have to pass actual access token and refresh token to revoke

1.1. Improve generating links
1.2. Remove the pageUriService dependency from controller
1.3. Maybe use Url.RouteUrl for genereting links
private GetHobbyListResponseDto GeneratePageLinks(UrlQueryParameters queryParameters, GetHobbyListResponseDto response)
{

    if (response.CurrentPage > 1)
    {
        var prevRoute = Url.RouteUrl(nameof(GetHobbyListAsync), new { limit = queryParameters.Limit, page = queryParameters.Page - 1 });

        response.AddResourceLink(LinkedResourceType.Prev, prevRoute);

    }

    if (response.CurrentPage < response.TotalPages)
    {
        var nextRoute = Url.RouteUrl(nameof(GetHobbyListAsync), new { limit = queryParameters.Limit, page = queryParameters.Page + 1 });

        response.AddResourceLink(LinkedResourceType.Next, nextRoute);
    }

    return response;
}