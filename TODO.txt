JobJet Todo:

- command/query handlers implementation for all use cases
- implement guards for contructor arguments
- add option for domain job offers - fullyRemote/partlyRemote/Office
+ add endpoint to generate route between two points
- validation of domain models
- validation of request models
- implement health check
+ integrate with OSRM API 
+ integrate with Google Geocoding API
- decide how to implement user management
- move application to docker container

- exception handlers
- simpler builders in services (osrm, google)
- finish other endpoints for job offers
- protect google API key!



1.1. Improve generating links
1.2. Remove the pageUriService dependency from controller
1.3. Maybe use Url.RouteUrl for genereting links
private GetHobbyListResponseDto GeneratePageLinks(UrlQueryParameters queryParameters, GetHobbyListResponseDto response)
{

    if (response.CurrentPage > 1)
    {
        var prevRoute = Url.RouteUrl(nameof(GetHobbyListAsync), new { limit = queryParameters.Limit, page = queryParameters.Page - 1 });

        response.AddResourceLink(LinkedResourceType.Prev, prevRoute);

    }

    if (response.CurrentPage < response.TotalPages)
    {
        var nextRoute = Url.RouteUrl(nameof(GetHobbyListAsync), new { limit = queryParameters.Limit, page = queryParameters.Page + 1 });

        response.AddResourceLink(LinkedResourceType.Next, nextRoute);
    }

    return response;
}